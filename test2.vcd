$date
	Mon May 23 20:58:15 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test1 $end
$var wire 32 ! rso2 [31:0] $end
$var wire 32 " rso1 [31:0] $end
$var wire 5 # rs2 [4:0] $end
$var wire 5 $ rs1 [4:0] $end
$var wire 32 % ins_dec_out [31:0] $end
$var wire 32 & ins_dec_in [31:0] $end
$var wire 32 ' alu_in2 [31:0] $end
$var wire 32 ( alu_in1 [31:0] $end
$var reg 32 ) PC [31:0] $end
$var reg 32 * alu_out [31:0] $end
$var reg 5 + alu_rd [4:0] $end
$var reg 1 , alu_reg_w_en $end
$var reg 1 - clk $end
$var reg 1 . rst $end
$var reg 1 / rst_i $end
$var reg 1 0 wb_en $end
$var reg 5 1 wb_reg [4:0] $end
$var reg 32 2 wb_val [31:0] $end
$scope module dec $end
$var wire 32 3 alu_out [31:0] $end
$var wire 5 4 alu_rd [4:0] $end
$var wire 1 , alu_reg_w_en $end
$var wire 1 . rst $end
$var wire 32 5 rso2 [31:0] $end
$var wire 32 6 rso1 [31:0] $end
$var wire 5 7 rs2 [4:0] $end
$var wire 5 8 rs1 [4:0] $end
$var wire 32 9 ins_dec_in [31:0] $end
$var reg 32 : alu_in1 [31:0] $end
$var reg 32 ; alu_in2 [31:0] $end
$var reg 32 < ins_dec_out [31:0] $end
$upscope $end
$scope module ins $end
$var wire 32 = PC [31:0] $end
$var wire 1 - clk $end
$var reg 32 > ins [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 1 - clk $end
$var wire 32 ? ins [31:0] $end
$var wire 1 . rst $end
$var wire 1 0 wb_en $end
$var wire 5 @ wb_reg [4:0] $end
$var wire 32 A wb_val [31:0] $end
$var wire 5 B rs2 [4:0] $end
$var wire 5 C rs1 [4:0] $end
$var reg 32 D rso1 [31:0] $end
$var reg 32 E rso2 [31:0] $end
$var integer 32 F i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx F
b0 E
b0 D
b0 C
b0 B
bx A
bx @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
bx 2
bx 1
x0
x/
1.
0-
0,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#1
b111101100001000000100010011 %
b111101100001000000100010011 <
b1 C
b11011 B
b11011 7
b1 8
b11011 #
b1 $
b111101100001000000100010011 &
b111101100001000000100010011 9
b111101100001000000100010011 >
b111101100001000000100010011 ?
b100000 F
b1 )
b1 =
1-
#2
0-
1/
0.
#3
b0 )
b0 =
1-
#4
0-
10
b1001000110100 2
b1001000110100 A
b0 1
b0 @
#5
b100000000000010010011 %
b100000000000010010011 <
b0 C
b1 B
b1 7
b0 8
b1 #
b0 $
b100000000000010010011 &
b100000000000010010011 9
b100000000000010010011 >
b100000000000010010011 ?
b0 )
b0 =
1-
#6
0-
b1001000110001 2
b1001000110001 A
b1 1
b1 @
#7
b0 )
b0 =
b1001000110001 !
b1001000110001 5
b1001000110001 E
1-
#8
0-
b1001000110010 2
b1001000110010 A
b10 1
b10 @
#9
b0 )
b0 =
1-
#10
0-
b1001000110011 2
b1001000110011 A
b11 1
b11 @
#11
b0 )
b0 =
1-
#12
0-
b1 +
b1 4
1,
b1000100000001000100000 *
b1000100000001000100000 3
00
0/
#13
b111101100001000000100010011 %
b111101100001000000100010011 <
b1000100000001000100000 '
b1000100000001000100000 ;
b1 C
b11011 B
b11011 7
b1 8
b11011 #
b1 $
b111101100001000000100010011 &
b111101100001000000100010011 9
b111101100001000000100010011 >
b111101100001000000100010011 ?
b1 )
b1 =
1-
#14
0-
b10 +
b10 4
#15
b0 '
b0 ;
b1001000110001 (
b1001000110001 :
b0 !
b0 5
b0 E
b1001000110001 "
b1001000110001 6
b1001000110001 D
b10 )
b10 =
1-
#16
0-
b111 +
b111 4
#17
b11010000000100011 %
b11010000000100011 <
b11 C
b0 B
b0 7
b11 8
b0 #
b11 $
b11010000000100011 &
b11010000000100011 9
b11010000000100011 >
b11010000000100011 ?
b11 )
b11 =
1-
#18
0-
b1000 +
b1000 4
#19
b1001000110011 (
b1001000110011 :
b1001000110011 "
b1001000110011 6
b1001000110011 D
b100 )
b100 =
1-
#20
0-
#21
b1010010000100011 %
b1010010000100011 <
b1 C
b1 8
b1 $
b1010010000100011 &
b1010010000100011 9
b1010010000100011 >
b1010010000100011 ?
b101 )
b101 =
1-
#22
b1010010000100011 %
b1010010000100011 <
b1001000110011 (
b1001000110011 :
0-
1.
#23
b1010010000100011 %
b1010010000100011 <
b0 (
b0 :
b0 "
b0 6
b0 D
b110 )
b110 =
b100000 F
1-
#24
0-
0.
#25
b1000000000100100000001010110011 %
b1000000000100100000001010110011 <
b100 C
b1 B
b1 7
b100 8
b1 #
b100 $
b1000000000100100000001010110011 &
b1000000000100100000001010110011 9
b1000000000100100000001010110011 >
b1000000000100100000001010110011 ?
b111 )
b111 =
1-
#26
0-
#27
b1000 )
b1000 =
1-
#28
0-
#29
b1000001010001110110011 %
b1000001010001110110011 <
b1 C
b10 B
b10 7
b1 8
b10 #
b1 $
b1000001010001110110011 &
b1000001010001110110011 9
b1000001010001110110011 >
b1000001010001110110011 ?
b1001 )
b1001 =
1-
#30
0-
#31
b1010 )
b1010 =
1-
#32
0-
#33
bx %
bx <
bx C
bx B
bx 7
bx 8
bx #
bx $
bx &
bx 9
bx >
bx ?
b1011 )
b1011 =
1-
#34
0-
#35
bx '
bx ;
bx (
bx :
bx !
bx 5
bx E
bx "
bx 6
bx D
b1100 )
b1100 =
1-
#36
0-
#37
b1101 )
b1101 =
1-
#38
0-
#39
b1110 )
b1110 =
1-
#40
0-
#41
b1111 )
b1111 =
1-
#42
0-
#43
b10000 )
b10000 =
1-
#44
0-
#45
b10001 )
b10001 =
1-
#46
0-
#47
b10010 )
b10010 =
1-
#48
0-
#49
b10011 )
b10011 =
1-
#50
0-
#51
b10100 )
b10100 =
1-
#52
0-
#53
b10101 )
b10101 =
1-
#54
0-
#55
b10110 )
b10110 =
1-
#56
0-
#57
b10111 )
b10111 =
1-
#58
0-
#59
b11000 )
b11000 =
1-
#60
0-
#61
b11001 )
b11001 =
1-
#62
0-
#63
b11010 )
b11010 =
1-
#64
0-
#65
b11011 )
b11011 =
1-
#66
0-
#67
b11100 )
b11100 =
1-
#68
0-
#69
b11101 )
b11101 =
1-
